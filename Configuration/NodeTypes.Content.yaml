# -----------------------------------------------------------------------------
#
# Content
#
# -----------------------------------------------------------------------------

# Dropdown abstract
'M12.Foundation:DropdownAbstract':
  label: "${'Dropdown: ' + q(node).property('customHtmlId')}"
  abstract: TRUE
  superTypes:
    - 'M12.Foundation:AbstractDevBase'
  ui:
    inspector:
      groups:
        dropdownOptions:
          label: 'Dropdown options'
          position: 9
  constraints:
    nodeTypes:
      '*': FALSE # No children items allowed
  properties:
    dropdownSize:
      type: string
      ui:
        label: 'Dropdown content size'
        reloadIfChanged: TRUE
        inspector:
          group: 'dropdownOptions'
          editor: 'TYPO3.Neos/Inspector/Editors/SelectBoxEditor'
          editorOptions:
            placeholder: 'Default / Tiny'
            allowEmpty: TRUE
            values:
              tiny:
                label: 'Tiny'
              small:
                label: 'Small'
              medium:
                label: 'Medium'
              large:
                label: 'Large'
    customHtmlId:
      ui:
        label: 'Dropdown element ID'
        inspector:
          group: 'dropdownOptions'


# Dropdown that can handle list of links only.
'M12.Foundation:Dropdown':
  superTypes:
    - 'TYPO3.Neos:Content'
    - 'M12.Foundation:DropdownAbstract'
  ui:
    label: 'Dropdown: Links'
    icon: 'icon-sort-down'
    group: 'interactive'
  properties:
    text:
      type: string
      defaultValue: |
        <ul>
          <li><a href="#">Link 1</a></li>
          <li><a href="#">Link 2</a></li>
          <li><a href="#">Link 3</a></li>
        </ul>
      ui:
        inlineEditable: TRUE
        aloha:
          format:
            strong: TRUE
            em: TRUE
            u: TRUE
            sub: TRUE
            sup: TRUE
            p: FALSE
            h1: FALSE
            h2: FALSE
            h3: FALSE
            h4: FALSE
            h5: FALSE
          link:
            a: TRUE
          alignment:
            left: FALSE
            center: FALSE
            right: FALSE
            justify: FALSE
          formatlesspaste:
            button: FALSE
            formatlessPasteOption: TRUE
            autoparagraph: FALSE

# Dropdown that can handle custom content.
'M12.Foundation:DropdownContent':
  superTypes:
    - 'TYPO3.Neos:Content'
    - 'M12.Foundation:DropdownAbstract'
  ui:
    label: 'Dropdown: Content'
    icon: 'icon-collapse'
    group: 'interactive'
    inlineEditable: TRUE
  childNodes:
    content:
      type: 'TYPO3.Neos:ContentCollection'
  properties:
    dropdownPadding:
      type: boolean
      defaultValue: TRUE
      ui:
        label: 'Add padding to dropdown container'
        reloadIfChanged: TRUE
        inspector:
          group: 'dropdownOptions'



# -----------------------------------------------------------------------------
# Accordion
# -----------------------------------------------------------------------------
'M12.Foundation:AccordionAbstract':
  abstract: TRUE
  superTypes:
    - 'M12.Foundation:AbstractDevBase'
  ui:
    inspector:
      groups:
        accordionSettings:
          label: 'Accordion settings'
          position: 9

'M12.Foundation:Accordion':
  superTypes:
    - 'TYPO3.Neos:Content'
    - 'M12.Foundation:AccordionAbstract'
  ui:
    label: 'Accordion'
    icon: 'icon-reorder'
    group: 'structure'
    inlineEditable: TRUE
  constraints:
    nodeTypes:
      'M12.Foundation:AccordionItem': TRUE
      '*': FALSE # No children items allowed
  childNodes:
    content:
      type: 'M12.Foundation:AccordionItem'
  properties:
    accordionGroupName:
      type: string
      ui:
        label: 'Accordion group name'
        reloadIfChanged: TRUE
        inspector:
          group: 'accordionSettings'
          editorOptions:
            placeholder: '...for distributed accordion groups only'
      validation:
        regularExpression:
          regularExpression: '/^[a-z0-9\-]+$/i'


'M12.Foundation:AccordionItem':
  superTypes:
    - 'TYPO3.Neos:Content'
    - 'M12.Foundation:AccordionAbstract'
  ui:
    label: 'Accordion Item'
    icon: 'icon-reorder'
    group: 'structure'
  constraints:
    nodeTypes:
      '*': FALSE # No children items allowed apart of child ContentCollection
  childNodes:
    content:
      type: 'TYPO3.Neos:ContentCollection'
  properties:
    accordionItemLabel:
      type: string
      defaultValue: 'Accordion item label'
      ui:
        inspector:
          group: 'accordionSettings'
        aloha:
          format:
            strong: TRUE
            em: TRUE
            u: TRUE
            sub: TRUE
            sup: TRUE
            p: FALSE
            h1: FALSE
            h2: FALSE
            h3: FALSE
            h4: FALSE
            h5: FALSE
          link:
            a: FALSE
          alignment:
            left: FALSE
            center: FALSE
            right: FALSE
            justify: FALSE
          formatlesspaste:
            button: FALSE
            formatlessPasteOption: TRUE
            autoparagraph: FALSE
    accordionItemId:
      type: string
      ui:
        label: 'Accordion item ID'
        reloadIfChanged: TRUE
        inspector:
          group: 'accordionSettings'
      validation:
        regularExpression:
          regularExpression: '/^[a-z0-9\-]+$/i'
    isAccordionItemActive:
      type: boolean
      defaultValue: TRUE
      ui:
        label: 'Make this accordion item active'
        reloadIfChanged: TRUE
        inspector:
          group: 'accordionSettings'


# -----------------------------------------------------------------------------
# Tabs
# -----------------------------------------------------------------------------
'M12.Foundation:TabItem':
  superTypes:
    - 'TYPO3.Neos:Content'
  ui:
    label: 'Tab Item'
    icon: 'icon-angle-right'
    inspector:
      groups:
        tabSettings:
          label: 'Tab item options'
          position: 9
  constraints:
    nodeTypes:
      '*': FALSE # All content must go to child ContentCollection
  childNodes:
    content:
      type: 'TYPO3.Neos:ContentCollection'
  properties:
    title:
      type: string
      defaultValue: 'Tab'
      ui:
        inspector:
          group: 'tabSettings'
          position: 10
    activeTab:
      type: boolean
      ui:
        label: 'Active tab'
        reloadIfChanged: TRUE
        inspector:
          group: 'tabSettings'
          position: 20


'M12.Foundation:Tabs':
  superTypes:
    - 'TYPO3.Neos:Content'
    - 'M12.Foundation:AbstractDevCustomTag'
    - 'M12.Foundation:AbstractNavSailingType'
  ui:
    label: 'Tabs'
    icon: 'icon-double-angle-right'
    group: 'structure'
    inlineEditable: TRUE
    inspector:
      groups:
        tabSettings:
          label: 'Tab item options'
          position: 9
  constraints:
    nodeTypes:
      'M12.Foundation:TabItem': TRUE
      '*': FALSE
  childNodes:
    tab1:
      type: 'M12.Foundation:TabItem'
    tab2:
      type: 'M12.Foundation:TabItem'
  properties:
    vertical:
      type: boolean
      ui:
        label: 'Vertical tabs'
        reloadIfChanged: TRUE
        inspector:
          group: 'tabSettings'
          position: 10


# -----------------------------------------------------------------------------
# Font Awesome Icon
# -----------------------------------------------------------------------------
'M12.Foundation:FontIcon':
  superTypes:
    - 'TYPO3.Neos:Content'
    - 'M12.Foundation:AbstractFontIcon'
  ui:
    label: 'Font Awesome icon'
    icon: 'icon-flag'
    inspector:
      groups:
        fontIconOptions:
          # Put this group at the very beginning for this content element
          # Also move it to the very 1st, default tab
          position: 10
          tab: default
  properties:
    faName:
      defaultValue: 'circle-o-notch'
