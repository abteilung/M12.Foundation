#
# Mixin to define node title used as a node reference name
# Note: it is based on 'TYPO3.Neos:Node.label' definition
# which takes the 'title' property as a displayed node label.
#
'M12.Foundation:AbstractNodeTitle':
  abstract: TRUE
  properties:
    title:
      type: string
      ui:
        label: 'Node title/label'
        help:
          message: |
            Rename current content element, so it is easier to find it in the _Structure Tree_ panel.
            
            Setting this field can be also useful if you reference to it (e.g. from _Insert content references_ element) or search for it.
        inspector:
          group: 'type'
          position: 10

#
# Mixin with custom id / css class / inline css
#
'M12.Foundation:AbstractDevBase':
  abstract: TRUE
  ui:
    inspector:
      groups:
        dev:
          label: 'Advanced settings'
          position: 95
          tab: dev
        devCode:
          label: 'Custom code'
          position: 95
          tab: dev
  properties:
    customCssClass:
      type: string
      ui:
        label: 'Element custom CSS class name(s)'
        help:
          message: |
            When set, this value will be added to the element's `class` attribute in the HTML code.
            
            Note: multiple classes must be **space-separated**.
        reloadIfChanged: TRUE
        inspector:
          group: 'dev'
          position: 10
          editor: Content/Inspector/Editors/TextFieldEditor
          editorOptions:
            placeholder: 'None'
      validation:
        regularExpression:
          regularExpression: '/^[-a-z0-9_ ]+$/i'
    customHtmlId:
      type: string
      ui:
        label: 'Element custom HTML ID'
        help:
          message: "If provided, this value will be set as the element's `id` attribute in the HTML code."
        reloadIfChanged: TRUE
        inspector:
          group: 'dev'
          position: 11
          editor: Content/Inspector/Editors/TextFieldEditor
          editorOptions:
            placeholder: 'None'
      validation:
        regularExpression:
          regularExpression: '/^[-a-z0-9_]+$/i'
    customCssCode:
      type: string
      ui:
        label: 'Element inline CSS'
        help:
          message: "Add any necessary CSS styling for the element. The value will be set for the element's `style` attribute in the HTML code."
        reloadIfChanged: TRUE
        inspector:
          group: 'devCode'
          position: 30
          editor: Content/Inspector/Editors/TextFieldEditor
          editorOptions:
            placeholder: 'e.g. margin-top: 3rem'
    customUserAttributes:
      type: string
      ui:
        label: 'Element extra HTML attributes'
        help:
          message: |
            Add any custom HTML attributes to the element.  
            One per line.
            
            ##### Example
            ```
            data-something=value
            data-options={"foo":"bar"}
            tabindex=0
            ```
        reloadIfChanged: TRUE
        inspector:
          group: 'devCode'
          position: 40
          editor: 'Content/Inspector/Editors/TextAreaEditor'
          editorOptions:
            placeholder: 'e.g. custom-data-attribute=value'

'M12.Foundation:AbstractRadiusRoundedStyle':
  abstract: TRUE
  properties:
    classRadiusAndRounded:
      type: string
      ui:
        label: 'Radius or rounded style'
        reloadIfChanged: TRUE
        inspector:
          group: 'utilityClasses'
          position: 50
          editor: Content/Inspector/Editors/SelectBoxEditor
          editorOptions:
            placeholder: 'No'
            allowEmpty: TRUE
            values:
              radius:
                label: 'Radius'
              round:
                label: 'Rounded'

# Similar to 'M12.Foundation:AbstractRadiusRoundedStyle', but with Radius only
# Appliable to element where 'rounded' style is not applicable.
'M12.Foundation:AbstractRadiusStyle':
  abstract: TRUE
  properties:
    classRadiusAndRounded:
      type: string
      ui:
        label: 'Radius style'
        help:
          message: "Select to have slightly rounded corners for this element."            
        reloadIfChanged: TRUE
        inspector:
          group: 'utilityClasses'
          position: 50
          editor: Content/Inspector/Editors/SelectBoxEditor
          editorOptions:
            placeholder: 'No'
            allowEmpty: TRUE
            values:
              radius:
                label: 'Radius'

'M12.Foundation:AbstractDevCustomLook':
  abstract: TRUE
  ui:
    inspector:
      groups:
        devView:
          position: 10
          tab: dev
          label: 'Custom look'
  properties:
    customLook:
      type: string
      ui:
        label: 'Predefined style / look'
        help:
          message: |
            Can be useful when working with external stylesheet when you have pre-defined set of styles for particular content element. Instead of typing the class name in _Element custom CSS class name_ field, you can select if from here.
            
            This setting will add `style-1`, `style-2`, `style-3` to the element's `class` attribute in the HTML code.
        reloadIfChanged: TRUE
        inspector:
          group: 'devView'
          position: 40
          editor: 'TYPO3.Neos/Inspector/Editors/SelectBoxEditor'
          editorOptions:
            placeholder: 'None'
            allowEmpty: TRUE
            values:
              style-1:
                label: 'Style 1'
              style-2:
                label: 'Style 2'
              style-3:
                label: 'Style 3'

#
# Mixin:
# Semantic markup, choosing tag name for wrapper element
#
'M12.Foundation:AbstractDevCustomTag':
  abstract: TRUE
  ui:
    inspector:
      groups:
        devSemantic:
          label: 'Semantic Web'
          position: 96
          tab: dev
  properties:
    customTagName:
      type: string
      ui:
        label: 'Element semantic tag type'
        help:
          message: "If you peculiar about HTML markup and its semanticity, you can set here the wrapping tag for the element. Otherwise the default will be `div`."
        reloadIfChanged: TRUE
        inspector:
          group: 'devSemantic'
          position: 50
          editor: 'TYPO3.Neos/Inspector/Editors/SelectBoxEditor'
          editorOptions:
            placeholder: 'Default / None'
            allowEmpty: TRUE
            values:
              main:
                label: 'MAIN'
              header:
                label: 'HEADER'
              nav:
                label: 'NAV'
              section:
                label: 'SECTION'
              artile:
                label: 'ARTICLE'
              aside:
                label: 'ASIDE'
              footer:
                label: 'FOOTER'

#
# Mixin: Navigation: sticky navigation support
#
'M12.Foundation:AbstractNavSailingType':
  superTypes:
    'M12.Foundation:AbstractNavFragmentId': TRUE
  abstract: TRUE
  properties:
    magellanSupport:
      type: boolean
      ui:
        label: 'Magellan Sticky Navigation support'
        help:
          message: |
            This option lets you give your site sticky navigation. This fixed-position navigation helps users **keep track of where they are on a page without scrolling**. See demo and technical details [here](http://foundation.zurb.com/docs/components/magellan.html).
        reloadIfChanged: TRUE
        inspector:
          group: 'sailingOptions'
          position: 9

#
# Mixin for document/content nodes with 'fragmentId' property
# which can be rendered as #fragmentId (document links)
# or anchor <a name"fragmentId"></a>
#
'M12.Foundation:AbstractNavFragmentId':
  abstract: TRUE
  ui:
    inspector:
      groups:
        sailingOptions:
          label: 'Sailing options'
          position: 96
          tab: meta
  properties:
    fragmentId:
      type: string
      ui:
        label: 'Section #name'
        help:
          message: |
            Provided value will be rendered as anchor before the element, so you can reference to it (e.g. from links or from _Magellan Sticky Navigation_).
            
            Developer info: the HTML output will be  
            `<a name="<value>"></a>`
        reloadIfChanged: TRUE
        inspector:
          group: 'sailingOptions'
          position: 10
          editor: Content/Inspector/Editors/TextFieldEditor
          editorOptions:
            placeholder: 'None'
      validation:
        'TYPO3.Neos/Validation/StringLengthValidator':
          minimum: 1
          maximum: 32
        regularExpression:
          regularExpression: '/^[a-z0-9\-]+$/i'

#
# Mixin for nav content elements, to add support for fixed/sticky
#
'M12.Foundation:AbstractNavFixedSticky':
  abstract: TRUE
  ui:
    inspector:
      groups:
        menuPosition:
          label: 'Menu positioning'
          position: 31 # After Neos menu 'options' group
  properties:
    classNavFixed:
      type: boolean
      ui:
        label: 'Fixed position'
        help:
          message: |
            Set this option to make the menu stay fixed as you scroll.
            
            Note: **do NOT use** with _Sticky_ option. 
        reloadIfChanged: TRUE
        inspector:
          group: 'menuPosition'
    classNavSticky:
      type: boolean
      ui:
        label: 'Sticky menu'
        help:
          message: |
            Works similar to _Fixed_ option, with that difference that you can put the menu anywhere on the site. When the menu hits the top of the browser, it will act like the fixed menu and stick to the top as users continue to scroll.
            
            Note: **do NOT use** with _Fixed_ option.
        reloadIfChanged: TRUE
        inspector:
          group: 'menuPosition'

#
# Mixin: tooltip
#
'M12.Foundation:AbstractTitleTooltip':
  abstract: TRUE
  ui:
    inspector:
      groups:
        tooltip:
          label: 'Tooltip'
          position: 91 # after AbstractFontIcon
          tab: view
  properties:
    htmlTitle:
      type: string
      ui:
        label: 'Tooltip text'
        help:
          message: |
            Set the tooltip for this content element.
            
            If used together with _Render as an enhanced tooltip_ option, the tooltip will be displayed as a nicer and enhanced tooltip. Otherwise default browser tooltip will be used.
            
            **Developer info**: this option sets `title="<value>"` attribute of the element.
        reloadIfChanged: FALSE
        inspector:
          group: 'tooltip'
          position: 10
          editorOptions:
            placeholder: 'Empty'
    tooltip:
      type: boolean
      ui:
        label: "Show as an enhanced tooltip"
        help:
          message: "When set, the tooltip will be displayed as a nicer, enhanced tooltip. Otherwise default browser tooltip will be used."
        inspector:
          group: 'tooltip'
          position: 20
    classTooltipPosition:
      type: string
      ui:
        label: 'Tooltip position'
        help:
          message: "Specify position of displayed tooltip (only when used with _Render as an enhanced tooltip_ setting)." 
        inspector:
          group: 'tooltip'
          position: 30
          editor: 'TYPO3.Neos/Inspector/Editors/SelectBoxEditor'
          editorOptions:
            placeholder: 'Default (Bottom)'
            allowEmpty: TRUE
            values:
              tip-top:
                label: 'Top'
              tip-bottom:
                label: 'Bottom'
              tip-left:
                label: 'Left'
              tip-right:
                label: 'Right'
    tooltipOptions:
      type: array
      ui:
        label: 'Tooltip options'
        inspector:
          group: 'tooltip'
          position: 40
          editor: 'TYPO3.Neos/Inspector/Editors/SelectBoxEditor'
          editorOptions:
            placeholder: 'Tooltip options'
            values:
              'disable_for_touch:true':
                label: 'Disable for touch'
              'show_on:small':
                label: 'Show on small device only'
              'show_on:medium':
                label: 'Show on: medium device only'
              'show_on:large':
                label: 'Show on: large device only'
