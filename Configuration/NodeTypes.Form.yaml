# -----------------------------------------------------------------------------
#
# Form
#
# -----------------------------------------------------------------------------

# <form> element.
'M12.Foundation:Form':
  superTypes:
    'TYPO3.Neos:Content': TRUE
    'TYPO3.Neos:ContentCollection': TRUE
    'M12.Foundation:AbstractNavSailingType': TRUE
  ui:
    label: 'Form Container'
    icon: 'icon-th-list'
    group: 'forms'
    inlineEditable: TRUE
    inspector:
      groups:
        formSettings:
          label: 'Form settings'
          position: 5
  properties:
    actionUri:
      type: string
      ui:
        label: 'Action URL'
        help:
          message: "URL to which the form should be submitted. Used only for real forms submitting data."
        reloadIfChanged: FALSE
        inspector:
          group: 'formSettings'
    methodType:
      type: string
      defaultValue: 'get'
      ui:
        label: 'Submit method'
        reloadIfChanged: TRUE
        inspector:
          group: 'formSettings'
          editor: 'TYPO3.Neos/Inspector/Editors/SelectBoxEditor'
          editorOptions:
            values:
              post:
                label: 'POST'
              get:
                label: 'GET'


# Abstract NodeType for all form inputs (including buttons).
'M12.Foundation:FormElementAbstract':
  abstract: TRUE
  superTypes:
    'TYPO3.Neos:Content': TRUE
    'M12.Foundation:AbstractTitleTooltip': TRUE
  ui:
    group: 'forms'
    inspector:
      groups:
        formInputSettings:
          label: 'Form element settings'
          position: 5
        dev:
          label: 'Advanced form element settings'
          position: 9
  properties:
    inputName:
      type: string
      ui:
        label: 'Form element name attribute'
        help:
          message: |
            Specify the form input name attribute (rendered as `name="<value>"`).
        reloadIfChanged: TRUE
        inspector:
          group: 'dev'
          position: 10
          editorOptions:
            placeholder: 'None'
    inputValue:
      type: string
      ui:
        label: 'Form element value'
        help:
          message: |
            Specify the form input value attribute (rendered as `value="<value>"`).
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'
          position: 20
    inputRequired:
      type: boolean
      ui:
        label: 'Required'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'
          position: 50
    inputReadOnly:
      type: boolean
      ui:
        label: 'Mark as a read-only field'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'
          position: 60
    inputDisabled:
      type: boolean
      ui:
        label: 'Mark as a disabled field'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'
          position: 70
    errorTxt:
      type: string
      defaultValue: 'Invalid entry'
      ui:
        inlineEditable: TRUE
        aloha:
          'format': []
    errorState:
      type: boolean
      ui:
        label: 'Mark as an error state'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'
          position: 80


# Abstract for all form elements that need <label> element.
'M12.Foundation:FormInputLabelAbstract':
  abstract: TRUE
  ui:
    inspector:
      groups:
        formLabelSettings:
          label: 'Form label settings'
          position: 6
  properties:
    inputLabel:
      type: string
      defaultValue: 'Label'
      ui:
        inlineEditable: TRUE
        inspector:
          group: 'formLabelSettings'
          position: 5
        aloha:
          format:
            strong: TRUE
            em: TRUE
            u: TRUE
            sub: TRUE
            sup: TRUE
            p: FALSE
            h1: FALSE
            h2: FALSE
            h3: FALSE
            h4: FALSE
            h5: FALSE
          link:
            a: FALSE
          alignment:
            left: FALSE
            center: FALSE
            right: FALSE
            justify: FALSE
          formatlesspaste:
            button: FALSE
            formatlessPasteOption: TRUE
            autoparagraph: FALSE
    inputLabelEnable:
      type: boolean
      defaultValue: TRUE
      ui:
        label: 'Enable input label'
        help:
          message: "Check this field to have input label rendered. Uncheck to completely hide it."
        reloadIfChanged: TRUE
        inspector:
          group: 'formLabelSettings'
          position: 10
    labelCssClass:
      type: string
      ui:
        label: 'Label custom class(es)'
        help:
          message: "Extra CSS classes applied to `label` element."
        reloadIfChanged: TRUE
        inspector:
          group: 'formLabelSettings'
          position: 20
          editorOptions:
            placeholder: 'None'
      validation:
        regularExpression:
          regularExpression: '/^[a-z0-9\- ]+$/i'
    labelCssCode:
      type: string
      ui:
        label: 'Label inline CSS'
        help:
          message: |
            Custom inline CSS applied to `label` element.
            
            ##### Example
            `color: red; font-style: italic;`
        reloadIfChanged: TRUE
        inspector:
          group: 'formLabelSettings'
          position: 30
          editorOptions:
            placeholder: 'None'


# Abstract for all form elements that need placeholder property.
'M12.Foundation:FormInputPlaceholderAbstract':
  abstract: TRUE
  properties:
    inputPlaceholder:
      type: string
      ui:
        label: 'Placeholder text'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'
          position: 25
          editorOptions:
            placeholder: 'Placeholder text here...'


# Abstract for form elements that need "checked" property.
'M12.Foundation:FormInputCheckedAbstract':
  abstract: TRUE
  properties:
    inputChecked:
      type: boolean
      ui:
        label: 'Checked state'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'


# Fieldset.
'M12.Foundation:FormFieldset':
  superTypes:
    'TYPO3.Neos:Content': TRUE
    'TYPO3.Neos:ContentCollection': TRUE
  ui:
    label: 'Form Fieldset'
    help:
      message: "Fieldset element is used to group several fields as well as labels within a web form. Not required, but sometimes useful."
    icon: 'icon-check-empty'
    group: 'forms'
    inspector:
      groups:
        formInputSettings:
          label: 'Form input settings'
          position: 9
  properties:
    legendTxt:
      type: string
      defaultValue: 'Legend'
      ui:
        inlineEditable: TRUE
        aloha:
          'format': []
    showLegend:
      type: boolean
      defaultValue: TRUE
      ui:
        label: 'Show legend'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'


# <label> element.
'M12.Foundation:FormLabel':
  superTypes:
    'TYPO3.Neos:Content': TRUE
    'M12.Foundation:FormInputLabelAbstract': TRUE
    'M12.Foundation:AbstractTitleTooltip': TRUE
  ui:
    label: 'Form Label'
    icon: 'icon-paperclip'
    group: 'forms'
    inspector:
      groups:
        dev:
          label: 'Advanced label settings'
          position: 9
  properties:
    htmlFor:
      type: string
      ui:
        label: 'Label for a field'
        help:
          message: "Provide element's ID to which this `label` refers to."
        reloadIfChanged: TRUE
        inspector:
          group: 'formLabelSettings'
          editorOptions:
            placeholder: "Type in a related field's ID."
    labelInlined:
      type: boolean
      ui:
        label: 'Render as inline label'
        help:
          message: |
            Select to render label to the left of the input field.
            
            ### How to use it?
            * Add _Grid row: 2 columns_ element to the page. Set columns width as desired.
            * In the 1st column add `Form Label` element.
            * In the 2nd column add any input field.
            * Optionally: link label and input field together to provide best User eXperience. Use `Label for which field` option for that.
        reloadIfChanged: TRUE
        inspector:
          group: 'formLabelSettings'
    # Hide inherited 'inputLabelEnable' property as it's not relevant here
    inputLabelEnable:
      ui:
        inspector:
          group: 'na'
    # Hide custom css class / inline code - this is main LABEL element, therefore
    # properties available in TYPO3.Neos:Content (inherited from M12.Foundation:AbstractDevBase)
    # should be used.
    labelCssClass:
      ui:
        inspector:
          group: 'na'
    labelCssCode:
      ui:
        inspector:
          group: 'na'
    # Override labels in inherited properties from M12.Foundation:AbstractDevBase
    customHtmlId:
      ui:
        label: 'Label custom ID'
    customCssClass:
      ui:
        label: 'Label extra CSS class(es)'
    customCssCode:
      ui:
        label: 'Label inline CSS'
    customLook:
      ui:
        label: 'Label predefined style / look'


# NodeType for text based <input> fields, e.g. text, password, email, number etc.
'M12.Foundation:FormInput':
  superTypes:
    'M12.Foundation:FormElementAbstract': TRUE
    'M12.Foundation:FormInputLabelAbstract': TRUE
    'M12.Foundation:FormInputPlaceholderAbstract': TRUE
    'M12.Foundation:AbstractRadiusStyle': TRUE
  ui:
    label: 'Text field'
    icon: 'icon-pencil'
  properties:
    inputType:
      type: string
      defaultValue: 'text'
      ui:
        label: 'Choose input type'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'
          position: 5
          editor: 'TYPO3.Neos/Inspector/Editors/SelectBoxEditor'
          editorOptions:
            values:
              text:
                label: 'Text'
              number:
                label: 'Number'
              password:
                label: 'Password'
              email:
                label: 'Email'
              tel:
                label: 'Telephone'
              url:
                label: 'Url'
              search:
                label: 'Search'
              range:
                label: 'Range'
              date:
                label: 'Date'
              time:
                label: 'Time'
              color:
                label: 'Color'
    classRadiusAndRounded:
      ui:
        inspector:
          group: 'formInputSettings'
          position: 99


# Pre/postfix element.
'M12.Foundation:FormInputPrePostfix':
  superTypes:
    'TYPO3.Neos:Content': TRUE
    'M12.Foundation:AbstractDevCustomTag': TRUE
  ui:
    label: 'Pre/Postfix Label'
    help:
      message: |
        Prefix and postfix label elements are to support labels tied to fields, as a pre- or post-fix label.
        
        Note: use _Button_ element instead, if the pre/postfix label is actually an action to be triggered (e.g. form submit, going to the specified URL etc).
        
        ##### How to use it?
        * Add _Grid row: 2 columns_ element to the page.
        * Select the `Collapse: remove column gutters (pading)` checkbox on _Grid row: 2 columns_ element.
        * Set columns width as desired.
        * Add any input field to the 1st or the 2nd column, depending if you want to use postfix or prefix label.
        * Add _Pre/Postfix Label_ (or _Button_) element to the other column.
        
        See examples and documentation [here](http://foundation.zurb.com/docs/components/forms.html).
    icon: 'icon-check-empty'
    group: 'forms'
    inspector:
      groups:
        formInputSettings:
          label: 'Form input settings'
          position: 9
  properties:
    text:
      type: string
      defaultValue: 'Go!'
      ui:
        inlineEditable: TRUE
    fixType:
      type: string
      defaultValue: 'postfix'
      ui:
        label: 'Choose prefix or postfix type'
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'
          editor: 'TYPO3.Neos/Inspector/Editors/SelectBoxEditor'
          editorOptions:
            values:
              prefix:
                label: 'Prefix'
              postfix:
                label: 'Postfix'
    # Allow overridding tagName - just to have an ability to quickly switch it to BUTTON.
    # Otherwise we should advise users to use feature-rich button/link element.
    customTagName:
      ui:
        inspector:
          editorOptions:
            placeholder: 'Default / SPAN'
            allowEmpty: TRUE
            values:
              span:
                label: 'SPAN'
              button:
                label: 'BUTTON'

# NodeType for checkbox input.
'M12.Foundation:FormInputCheckbox':
  superTypes:
    'M12.Foundation:FormElementAbstract': TRUE
    'M12.Foundation:FormInputLabelAbstract': TRUE
    'M12.Foundation:FormInputCheckedAbstract': TRUE
  ui:
    label: 'Checkbox Field'
    icon: 'icon-check'


# NodeType for radio input.
'M12.Foundation:FormInputRadio':
  superTypes:
    'M12.Foundation:FormElementAbstract': TRUE
    'M12.Foundation:FormInputLabelAbstract': TRUE
    'M12.Foundation:FormInputCheckedAbstract': TRUE
  ui:
    label: 'Radio Field'
    icon: 'icon-circle-blank'


# NodeType for select.
'M12.Foundation:FormInputSelect':
  superTypes:
    'M12.Foundation:FormElementAbstract': TRUE
    'M12.Foundation:FormInputLabelAbstract': TRUE
    'M12.Foundation:AbstractRadiusStyle': TRUE
  ui:
    label: 'Select Field'
    icon: 'icon-chevron-down'
  properties:
    selectOptions:
      type: string
      ui:
        label: 'Select options (one per line)'
        help:
          message: |
            Provide a list of available options for the _Select Field_ dropdown list, one per line.
            
            ### Example
            ```
            Label A
            Label B
            valueC = Label C
            valueD=Label D
            ```
            * Specify **one option per line**.
            * Use an equals sign (`=`) to **create a empty option/label**. In that case `=` sign would be the only character in the line.
            * If needed, you can specify option's value, i.e. `valueX = Displayed Label for X`
            * Make a particular option selected initially by putting its value to _Form element value_ field above.
        reloadIfChanged: TRUE
        inspector:
          group: 'formInputSettings'
          editor: Content/Inspector/Editors/TextAreaEditor
          editorOptions:
            placeholder: |
              e.g.: value = Label
              or: Just Label
            rows: 10
    classRadiusAndRounded:
      ui:
        inspector:
          group: 'formInputSettings'
          position: 99


# NodeType for textarea.
'M12.Foundation:FormInputTextarea':
  superTypes:
    'M12.Foundation:FormElementAbstract': TRUE
    'M12.Foundation:FormInputLabelAbstract': TRUE
    'M12.Foundation:AbstractRadiusStyle': TRUE
  ui:
    label: 'Textarea'
    icon: 'icon-align-left'
  properties:
    inputValue:
      ui:
        label: 'Textarea value' # Override inputValue label
    rows:
      type: integer
      defaultValue: 2
      ui:
        label: 'Rows'
        help:
          message: "Number of rows in a textarea field."
        inspector:
          group: 'formInputSettings'
          position: 30 # after inputValue (20)
    classRadiusAndRounded:
      ui:
        inspector:
          group: 'formInputSettings'
          position: 99
