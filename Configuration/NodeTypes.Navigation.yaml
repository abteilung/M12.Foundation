# -----------------------------------------------------------------------------
#
# Navigation: Top Bar, Side Nav, Sub Nav
#
# -----------------------------------------------------------------------------

#
# Top Bar
#
'M12.Foundation:TopBar':
  superTypes:
    'Neos.Neos:Menu': TRUE
    'M12.Foundation:AbstractNavBehavior': TRUE
    'M12.Foundation:AbstractNodeTitle': TRUE
    'M12.Foundation:AbstractSectionId': TRUE
  ui:
    label: 'Top Bar'
    icon: 'icon-rocket'
    group: 'navigation'
    position: 10
    help:
      message: |
        _Top Bar_ is a great way to display a complex navigation bar on small, medium or large screens.
        
        It's a pretty complex piece of magical UI goodness:
        * auto-switch to off-canvas menu on a small devices
        * positioning options: fixed, sticky
        * sub-menu rendered as a dropdown menu
        * [Magellan Menu](http://foundation.zurb.com/docs/components/magellan.html) support
        * ... and more
        
        **Note:** Top Bar navigation is built automatically based on information from pages structure in your project. Therefore you manage Top Bar links by managing the pages structure.
    inspector:
      groups:
        navOptions:
          label: 'Top Bar options'
          position: 9
          tab: default
  properties:
    topBarTitle:
      type: string
      defaultValue: 'Home'
      ui:
        label: 'Top Bar title'
        help:
          message: |
            Set the title for the menu. It will be rendered as a link to your home page.
            
            **Hint:** this field supports raw HTML markup, so you can put here e.g. image with the site logo. For example:  
            ```
            <img src="https://domain.com/my-image.png" alt="" />
            ```
            
            **Hint:** Make this field empty to skip rendering of this section at all.
        reloadIfChanged: TRUE
        inspector:
          group: 'navOptions'
          position: 10
    classSectionAlign:
      type: string
      defaultValue: 'right'
      ui:
        label: 'Top Bar links align'
        help:
          message: "Align menu link to the right or left (default)."
        reloadIfChanged: TRUE
        inspector:
          group: 'navOptions'
          position: 20
          editor: Neos.Neos/Inspector/Editors/SelectBoxEditor
          editorOptions:
            placeholder: 'Default'
            values:
              left:
                label: 'left'
              right:
                label: 'right'
    topBarGridContained:
      type: boolean
      defaultValue: TRUE
      ui:
        label: 'Contain to grid'
        help:
          message: "Useful when you want Top Bar to be stretched to the full page width, but with its content contained to the grid."
        reloadIfChanged: TRUE
        inspector:
          group: 'navOptions'
    # Override default values from parent Neos.Neos:Menu
    maximumLevels:
      defaultValue: 3
      ui:
        help:
          message: "How many menu levels should be included in the Top Bar. 2nd-level navigation (and deeper) will be rendered as drop-downs."


#
# Side Nav (live, automatically generated by Neos)
#
'M12.Foundation:SideNavLive':
  superTypes:
    'Neos.Neos:Menu': TRUE
    'M12.Foundation:AbstractNavBehavior': TRUE
    'M12.Foundation:AbstractNodeTitle': TRUE
    'M12.Foundation:AbstractSectionId': TRUE
  ui:
    label: 'Side Menu'
    help:
      message: |
        Simple navigation in the form of **vertical links**. Ideal way to provide navigation for your entire site or for sections of an individual page.
        
        **Note:** _Side Menu_ is built automatically from pages structure in your project. Use _Side Menu (custom)_ to build your menu the "manual way".
    icon: 'icon-reorder'
    group: 'navigation'
    position: 20


#
# SideNav (custom)
#
'M12.Foundation:SideNav':
  superTypes:
    'Neos.Neos:Content': TRUE
    'Neos.Neos:ContentCollection': TRUE
    'M12.Foundation:AbstractNodeTitle': TRUE
    'M12.Foundation:AbstractSectionId': TRUE
  ui:
    label: 'Side Menu (custom)'
    help:
      message: |
        Simple navigation in the form of **vertical links**. Ideal way to provide navigation for your entire site or for sections of an individual page.
        
        **Note:** _Side Menu (custom)_ is managed manually, i.e. you add links by inserting _Menu Item_ elements into it. If you prefer the menu being built automatically from your page structure, use _Side Menu_ element.
    icon: 'icon-reorder'
    group: 'navigation'
    position: 21
    inlineEditable: TRUE
  constraints:
    nodeTypes:
      'M12.Foundation:NavItem': TRUE
      '*': FALSE # No other children items allowed


#
# SubNav (live, automatically generated by Neos)
#
'M12.Foundation:SubNavLive':
  superTypes:
    'Neos.Neos:Menu': TRUE
    'M12.Foundation:AbstractNavBehavior': TRUE
    'M12.Foundation:AbstractNodeTitle': TRUE
    'M12.Foundation:AbstractSectionId': TRUE
  ui:
    label: 'Sub Menu'
    help:
      message: |
        Simple navigation in the form of **horizontal links**. Ideal way to provide navigation for your entire site or for sections of an individual page.
        
        **Note:** _Sub Menu_ is built automatically from page structure in your project. Use _Sub Menu (custom)_ to build your menu the "manual way".
    icon: 'icon-ellipsis-horizontal'
    group: 'navigation'
    position: 30
  properties:
    title:
      type: string
      ui:
        label: 'Sub Menu title'
        help:
          message: "Menu title, rendered before all menu items."
        reloadIfChanged: TRUE
        inspector:
          group: 'options'
          position: 5


#
# SubNav custom
#
'M12.Foundation:SubNav':
  superTypes:
    'Neos.Neos:Content': TRUE
    'Neos.Neos:ContentCollection': TRUE
    'M12.Foundation:AbstractNodeTitle': TRUE
    'M12.Foundation:AbstractSectionId': TRUE
  ui:
    label: 'Sub Menu (custom)'
    help:
      message: |
        Simple navigation in the form of **horizonal links**. Ideal way to provide navigation for your entire site or for sections of an individual page.
        
        **Note:** _Sub Menu (custom)_ is managed manually, i.e. you add links by inserting _Menu Item_ elements into it. If you prefer the menu being built automatically from your page structure, use _Sub Menu_ element.
    icon: 'icon-ellipsis-horizontal'
    group: 'navigation'
    position: 31
    inlineEditable: TRUE
  constraints:
    nodeTypes:
      'M12.Foundation:NavItem': TRUE
      '*': FALSE # No other children items allowed
  properties:
    title:
      type: string
      ui:
        label: 'Sub Menu title'
        help:
          message: "Menu title, rendered before all menu items."
        reloadIfChanged: TRUE
        inspector:
          group: 'options'
          position: 5


#
# NavItem - can be put inside of "SideNav" or "SubNav" node types
#
'M12.Foundation:NavItem':
  superTypes:
    'Neos.Neos:Content': TRUE
    'M12.Foundation:AbstractFontIcon': TRUE
    'M12.Foundation:AbstractNodeTitle': TRUE
    'M12.Foundation:AbstractTitleTooltip': TRUE
  ui:
    label: 'Menu Item'
    icon: 'icon-minus'
    group: 'navigation'
    inspector:
      groups:
        options:
          label: 'Menu Item options'
          position: 9
  properties:
    label:
      type: string
      defaultValue: 'Nav item'
      ui:
        label: 'Menu Item label'
        reloadIfChanged: TRUE
        inlineEditable: TRUE
        inspector:
          group: 'options'
    htmlHref:
      type: string
      ui:
        label: 'Link / URL'
        help:
          message: |
            You can specify link in two ways:
            
            ##### Link to internal page
            Simply start typing the page title and it should appear on the list. Click to select and you're done.
            
            ##### Link to external page
            Paste a full URL address starting with `http://` or `https://` to link to _external_ page.
        inspector:
          group: 'options'
          editor: Neos.Neos/Inspector/Editors/LinkEditor
          editorOptions:
            placeholder: 'Page name or external URL...'
    classActive:
      type: boolean
      ui:
        label: 'Mark as active item'
        reloadIfChanged: TRUE
        inspector:
          group: 'options'
    classDivider:
      type: boolean
      ui:
        label: 'This is a divider'
        help:
          message: "Item will be rendered as a visual menu separator. Fields _Menu Item label_ and _Link / URL_ will be ignored."
        reloadIfChanged: TRUE
        inspector:
          group: 'options'
