'TYPO3.Neos:Document':
  properties:
    title:
      ui:
        inspector:
          position: 10
    _name:
      ui:
        inspector:
          position: 20
    uriPathSegment:
      ui:
        inspector:
          position: 30
    fragmentId:
      type: string
      ui:
        label: 'URL #fragment ID'
        help:
          message: |
            **Optional.** URL #fragment identifier. When provided, link to this page in the menu will be rendered with provided #fragment identifier at the end, i.e. `link/to/the/page#fragmentId`.
            
            ### Use cases
            
            ##### 1. Scroll to page section
            You want the page to be scrolled directly to a particular section when user visits a link with #fragmentId in it.  
            To mark the section on the page, use the _Section #name_ field on any content element. The _URL #fragment ID_ for the page and the _Section #name_ on the content element have to match.  
            **Hint:** you can use _Shortcut_ page if you need to create many links to the same page. The only difference then would be the 'URL #fragment ID' part.
            
            ##### 2. Work with [Magellan Sticky Menu](http://foundation.zurb.com/docs/components/magellan.html)
            See help message for _Section in Magellan Sticky Menu_ field on any content element to learn more.
        reloadIfChanged: TRUE
        inspector:
          group: 'document'
          position: 40
          editorOptions:
            placeholder: 'None'
      validation:
        'TYPO3.Neos/Validation/StringLengthValidator':
          minimum: 1
          maximum: 64
        regularExpression:
          regularExpression: '/^[a-z0-9\-]+$/i'


'TYPO3.Neos.NodeTypes:Page':
  superTypes:
    'M12.Foundation:AbstractDevBase': TRUE
    'M12.Foundation:AbstractDevCustomLook': TRUE
  properties:
    _hidden:
      ui:
        help:
          message: 'Disable this page, do not render it at all. It will be only available in the Neos back-end.'
    # Custom JS code at the end of BODY
    customJsCode:
      type: string
      ui:
        label: 'Custom page JS code'
        help:
          message: |
            Add any JavaScript code to the end of the `<body>` tag. It will be added _after_ jQuery and Foundation libraries.
            
            To have **JavaScript added to all pages** across the site, include it on the root page (the 1st one in the page tree). JavaScript added to a sub-page will be only available on that particular page.
            
            Note: do not wrap it into `<script>` tag. The system does it for you.
        reloadIfChanged: TRUE
        inspector:
          group: 'devCode'
          position: 30 # before 'customCssCode'
          editor: Content/Inspector/Editors/CodeEditor
          editorOptions:
            label: 'Add/edit JS code'
            highlightingMode: 'text/javascript'
    # Inherited from M12.Foundation:AbstractDevBase
    # Replace it with CssEditor
    customCssCode:
      ui:
        label: 'Custom page CSS code'
        help:
          message: |
            Add any custom CSS code to the end of the `<body>` tag.
            
            To have **CSS code added to all pages** across the site, include it on the root page (the 1st one in the page tree). CSS code added to a sub-page will be only available on that particular page.
            
            Note: do not wrap it into  
            `<style type="text/css">` tag. The system does it for you.
        inspector:
          editor: Content/Inspector/Editors/CodeEditor
          editorOptions:
            label: 'Add/edit CSS code'
            highlightingMode: 'text/css'
    # Inherited from M12.Foundation:AbstractDevBase
    customHtmlId:
      ui:
        label: 'Custom body ID'
        help:
          message: "If provided, this value will be set as the `id` attribute for the BODY tag in the HTML code."
    # Inherited from M12.Foundation:AbstractDevBase
    customCssClass:
      ui:
        label: 'Custom body CSS class(es)'
        help:
          message: |
            Set `<body>` `class` attribute in HTML code.
            
            Note: multiple classes must be **space-separated**.
    # Inherited from M12.Foundation:AbstractDevBase
    customLook:
      ui:
        label: 'Predefined page style / look'
        help:
          message: |
            Can be useful when working with external stylesheets where you could have pre-defined set of styles for particular page. It can be used as some sort of theme switcher.
            
            This setting will add accordingly `style-1`, `style-2`, `style-3` to the BODY `class` attribute in the HTML code.
    # Inherited from M12.Foundation:AbstractDevBase
    customUserAttributes:
      type: string
      ui:
        label: 'Custom BODY attributes'
